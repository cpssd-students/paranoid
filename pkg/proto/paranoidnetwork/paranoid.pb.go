// Code generated by protoc-gen-go. DO NOT EDIT.
// source: paranoidnetwork/paranoid.proto

package paranoid

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EmptyMessage struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyMessage) Reset()         { *m = EmptyMessage{} }
func (m *EmptyMessage) String() string { return proto.CompactTextString(m) }
func (*EmptyMessage) ProtoMessage()    {}
func (*EmptyMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_paranoid_a19385314f01eacd, []int{0}
}
func (m *EmptyMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyMessage.Unmarshal(m, b)
}
func (m *EmptyMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyMessage.Marshal(b, m, deterministic)
}
func (dst *EmptyMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyMessage.Merge(dst, src)
}
func (m *EmptyMessage) XXX_Size() int {
	return xxx_messageInfo_EmptyMessage.Size(m)
}
func (m *EmptyMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyMessage.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyMessage proto.InternalMessageInfo

type Node struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port                 string   `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	CommonName           string   `protobuf:"bytes,3,opt,name=common_name,json=commonName,proto3" json:"common_name,omitempty"`
	Uuid                 string   `protobuf:"bytes,4,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_paranoid_a19385314f01eacd, []int{1}
}
func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (dst *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(dst, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Node) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *Node) GetCommonName() string {
	if m != nil {
		return m.CommonName
	}
	return ""
}

func (m *Node) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type JoinClusterRequest struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port                 string   `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	CommonName           string   `protobuf:"bytes,3,opt,name=common_name,json=commonName,proto3" json:"common_name,omitempty"`
	Uuid                 string   `protobuf:"bytes,4,opt,name=uuid,proto3" json:"uuid,omitempty"`
	PoolPassword         string   `protobuf:"bytes,5,opt,name=pool_password,json=poolPassword,proto3" json:"pool_password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinClusterRequest) Reset()         { *m = JoinClusterRequest{} }
func (m *JoinClusterRequest) String() string { return proto.CompactTextString(m) }
func (*JoinClusterRequest) ProtoMessage()    {}
func (*JoinClusterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_paranoid_a19385314f01eacd, []int{2}
}
func (m *JoinClusterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinClusterRequest.Unmarshal(m, b)
}
func (m *JoinClusterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinClusterRequest.Marshal(b, m, deterministic)
}
func (dst *JoinClusterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinClusterRequest.Merge(dst, src)
}
func (m *JoinClusterRequest) XXX_Size() int {
	return xxx_messageInfo_JoinClusterRequest.Size(m)
}
func (m *JoinClusterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinClusterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JoinClusterRequest proto.InternalMessageInfo

func (m *JoinClusterRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *JoinClusterRequest) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *JoinClusterRequest) GetCommonName() string {
	if m != nil {
		return m.CommonName
	}
	return ""
}

func (m *JoinClusterRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *JoinClusterRequest) GetPoolPassword() string {
	if m != nil {
		return m.PoolPassword
	}
	return ""
}

type NewGenerationRequest struct {
	RequestingNode       *Node    `protobuf:"bytes,1,opt,name=requesting_node,json=requestingNode,proto3" json:"requesting_node,omitempty"`
	PoolPassword         string   `protobuf:"bytes,2,opt,name=pool_password,json=poolPassword,proto3" json:"pool_password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewGenerationRequest) Reset()         { *m = NewGenerationRequest{} }
func (m *NewGenerationRequest) String() string { return proto.CompactTextString(m) }
func (*NewGenerationRequest) ProtoMessage()    {}
func (*NewGenerationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_paranoid_a19385314f01eacd, []int{3}
}
func (m *NewGenerationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewGenerationRequest.Unmarshal(m, b)
}
func (m *NewGenerationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewGenerationRequest.Marshal(b, m, deterministic)
}
func (dst *NewGenerationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewGenerationRequest.Merge(dst, src)
}
func (m *NewGenerationRequest) XXX_Size() int {
	return xxx_messageInfo_NewGenerationRequest.Size(m)
}
func (m *NewGenerationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewGenerationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewGenerationRequest proto.InternalMessageInfo

func (m *NewGenerationRequest) GetRequestingNode() *Node {
	if m != nil {
		return m.RequestingNode
	}
	return nil
}

func (m *NewGenerationRequest) GetPoolPassword() string {
	if m != nil {
		return m.PoolPassword
	}
	return ""
}

type NewGenerationResponse struct {
	GenerationNumber     int64    `protobuf:"varint,1,opt,name=generation_number,json=generationNumber,proto3" json:"generation_number,omitempty"`
	Peers                []string `protobuf:"bytes,2,rep,name=peers,proto3" json:"peers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewGenerationResponse) Reset()         { *m = NewGenerationResponse{} }
func (m *NewGenerationResponse) String() string { return proto.CompactTextString(m) }
func (*NewGenerationResponse) ProtoMessage()    {}
func (*NewGenerationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_paranoid_a19385314f01eacd, []int{4}
}
func (m *NewGenerationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewGenerationResponse.Unmarshal(m, b)
}
func (m *NewGenerationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewGenerationResponse.Marshal(b, m, deterministic)
}
func (dst *NewGenerationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewGenerationResponse.Merge(dst, src)
}
func (m *NewGenerationResponse) XXX_Size() int {
	return xxx_messageInfo_NewGenerationResponse.Size(m)
}
func (m *NewGenerationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewGenerationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewGenerationResponse proto.InternalMessageInfo

func (m *NewGenerationResponse) GetGenerationNumber() int64 {
	if m != nil {
		return m.GenerationNumber
	}
	return 0
}

func (m *NewGenerationResponse) GetPeers() []string {
	if m != nil {
		return m.Peers
	}
	return nil
}

type KeyPieceRequest struct {
	Node                 *Node    `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Generation           int64    `protobuf:"varint,2,opt,name=generation,proto3" json:"generation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyPieceRequest) Reset()         { *m = KeyPieceRequest{} }
func (m *KeyPieceRequest) String() string { return proto.CompactTextString(m) }
func (*KeyPieceRequest) ProtoMessage()    {}
func (*KeyPieceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_paranoid_a19385314f01eacd, []int{5}
}
func (m *KeyPieceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyPieceRequest.Unmarshal(m, b)
}
func (m *KeyPieceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyPieceRequest.Marshal(b, m, deterministic)
}
func (dst *KeyPieceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyPieceRequest.Merge(dst, src)
}
func (m *KeyPieceRequest) XXX_Size() int {
	return xxx_messageInfo_KeyPieceRequest.Size(m)
}
func (m *KeyPieceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyPieceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_KeyPieceRequest proto.InternalMessageInfo

func (m *KeyPieceRequest) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *KeyPieceRequest) GetGeneration() int64 {
	if m != nil {
		return m.Generation
	}
	return 0
}

type KeyPiece struct {
	Data              []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	ParentFingerprint []byte `protobuf:"bytes,2,opt,name=parent_fingerprint,json=parentFingerprint,proto3" json:"parent_fingerprint,omitempty"`
	Prime             []byte `protobuf:"bytes,3,opt,name=prime,proto3" json:"prime,omitempty"`
	Seq               int64  `protobuf:"varint,4,opt,name=seq,proto3" json:"seq,omitempty"`
	// The Node data for the node who owns this KeyPiece
	OwnerNode *Node `protobuf:"bytes,5,opt,name=owner_node,json=ownerNode,proto3" json:"owner_node,omitempty"`
	// The KeyStateMachine generation this key belongs to
	Generation           int64    `protobuf:"varint,6,opt,name=generation,proto3" json:"generation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyPiece) Reset()         { *m = KeyPiece{} }
func (m *KeyPiece) String() string { return proto.CompactTextString(m) }
func (*KeyPiece) ProtoMessage()    {}
func (*KeyPiece) Descriptor() ([]byte, []int) {
	return fileDescriptor_paranoid_a19385314f01eacd, []int{6}
}
func (m *KeyPiece) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyPiece.Unmarshal(m, b)
}
func (m *KeyPiece) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyPiece.Marshal(b, m, deterministic)
}
func (dst *KeyPiece) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyPiece.Merge(dst, src)
}
func (m *KeyPiece) XXX_Size() int {
	return xxx_messageInfo_KeyPiece.Size(m)
}
func (m *KeyPiece) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyPiece.DiscardUnknown(m)
}

var xxx_messageInfo_KeyPiece proto.InternalMessageInfo

func (m *KeyPiece) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *KeyPiece) GetParentFingerprint() []byte {
	if m != nil {
		return m.ParentFingerprint
	}
	return nil
}

func (m *KeyPiece) GetPrime() []byte {
	if m != nil {
		return m.Prime
	}
	return nil
}

func (m *KeyPiece) GetSeq() int64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *KeyPiece) GetOwnerNode() *Node {
	if m != nil {
		return m.OwnerNode
	}
	return nil
}

func (m *KeyPiece) GetGeneration() int64 {
	if m != nil {
		return m.Generation
	}
	return 0
}

type KeyPieceSend struct {
	Key                  *KeyPiece `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	AddElement           bool      `protobuf:"varint,2,opt,name=add_element,json=addElement,proto3" json:"add_element,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *KeyPieceSend) Reset()         { *m = KeyPieceSend{} }
func (m *KeyPieceSend) String() string { return proto.CompactTextString(m) }
func (*KeyPieceSend) ProtoMessage()    {}
func (*KeyPieceSend) Descriptor() ([]byte, []int) {
	return fileDescriptor_paranoid_a19385314f01eacd, []int{7}
}
func (m *KeyPieceSend) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyPieceSend.Unmarshal(m, b)
}
func (m *KeyPieceSend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyPieceSend.Marshal(b, m, deterministic)
}
func (dst *KeyPieceSend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyPieceSend.Merge(dst, src)
}
func (m *KeyPieceSend) XXX_Size() int {
	return xxx_messageInfo_KeyPieceSend.Size(m)
}
func (m *KeyPieceSend) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyPieceSend.DiscardUnknown(m)
}

var xxx_messageInfo_KeyPieceSend proto.InternalMessageInfo

func (m *KeyPieceSend) GetKey() *KeyPiece {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *KeyPieceSend) GetAddElement() bool {
	if m != nil {
		return m.AddElement
	}
	return false
}

type SendKeyPieceResponse struct {
	ClientMustCommit     bool     `protobuf:"varint,1,opt,name=client_must_commit,json=clientMustCommit,proto3" json:"client_must_commit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendKeyPieceResponse) Reset()         { *m = SendKeyPieceResponse{} }
func (m *SendKeyPieceResponse) String() string { return proto.CompactTextString(m) }
func (*SendKeyPieceResponse) ProtoMessage()    {}
func (*SendKeyPieceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_paranoid_a19385314f01eacd, []int{8}
}
func (m *SendKeyPieceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendKeyPieceResponse.Unmarshal(m, b)
}
func (m *SendKeyPieceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendKeyPieceResponse.Marshal(b, m, deterministic)
}
func (dst *SendKeyPieceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendKeyPieceResponse.Merge(dst, src)
}
func (m *SendKeyPieceResponse) XXX_Size() int {
	return xxx_messageInfo_SendKeyPieceResponse.Size(m)
}
func (m *SendKeyPieceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendKeyPieceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendKeyPieceResponse proto.InternalMessageInfo

func (m *SendKeyPieceResponse) GetClientMustCommit() bool {
	if m != nil {
		return m.ClientMustCommit
	}
	return false
}

func init() {
	proto.RegisterType((*EmptyMessage)(nil), "paranoid.EmptyMessage")
	proto.RegisterType((*Node)(nil), "paranoid.Node")
	proto.RegisterType((*JoinClusterRequest)(nil), "paranoid.JoinClusterRequest")
	proto.RegisterType((*NewGenerationRequest)(nil), "paranoid.NewGenerationRequest")
	proto.RegisterType((*NewGenerationResponse)(nil), "paranoid.NewGenerationResponse")
	proto.RegisterType((*KeyPieceRequest)(nil), "paranoid.KeyPieceRequest")
	proto.RegisterType((*KeyPiece)(nil), "paranoid.KeyPiece")
	proto.RegisterType((*KeyPieceSend)(nil), "paranoid.KeyPieceSend")
	proto.RegisterType((*SendKeyPieceResponse)(nil), "paranoid.SendKeyPieceResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ParanoidNetworkClient is the client API for ParanoidNetwork service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ParanoidNetworkClient interface {
	// Used for health checking and discovery. Sends the IP and port of the
	// PFSD instance running on the client.
	Ping(ctx context.Context, in *Node, opts ...grpc.CallOption) (*EmptyMessage, error)
	// Used by a new node to let other nodes it is available to join the cluster.
	JoinCluster(ctx context.Context, in *JoinClusterRequest, opts ...grpc.CallOption) (*EmptyMessage, error)
	// Used by a new node to create a new key generation before joining the cluster.
	NewGeneration(ctx context.Context, in *NewGenerationRequest, opts ...grpc.CallOption) (*NewGenerationResponse, error)
	// Cryptography calls
	SendKeyPiece(ctx context.Context, in *KeyPieceSend, opts ...grpc.CallOption) (*SendKeyPieceResponse, error)
	RequestKeyPiece(ctx context.Context, in *KeyPieceRequest, opts ...grpc.CallOption) (*KeyPiece, error)
}

type paranoidNetworkClient struct {
	cc *grpc.ClientConn
}

func NewParanoidNetworkClient(cc *grpc.ClientConn) ParanoidNetworkClient {
	return &paranoidNetworkClient{cc}
}

func (c *paranoidNetworkClient) Ping(ctx context.Context, in *Node, opts ...grpc.CallOption) (*EmptyMessage, error) {
	out := new(EmptyMessage)
	err := c.cc.Invoke(ctx, "/paranoid.ParanoidNetwork/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paranoidNetworkClient) JoinCluster(ctx context.Context, in *JoinClusterRequest, opts ...grpc.CallOption) (*EmptyMessage, error) {
	out := new(EmptyMessage)
	err := c.cc.Invoke(ctx, "/paranoid.ParanoidNetwork/JoinCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paranoidNetworkClient) NewGeneration(ctx context.Context, in *NewGenerationRequest, opts ...grpc.CallOption) (*NewGenerationResponse, error) {
	out := new(NewGenerationResponse)
	err := c.cc.Invoke(ctx, "/paranoid.ParanoidNetwork/NewGeneration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paranoidNetworkClient) SendKeyPiece(ctx context.Context, in *KeyPieceSend, opts ...grpc.CallOption) (*SendKeyPieceResponse, error) {
	out := new(SendKeyPieceResponse)
	err := c.cc.Invoke(ctx, "/paranoid.ParanoidNetwork/SendKeyPiece", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paranoidNetworkClient) RequestKeyPiece(ctx context.Context, in *KeyPieceRequest, opts ...grpc.CallOption) (*KeyPiece, error) {
	out := new(KeyPiece)
	err := c.cc.Invoke(ctx, "/paranoid.ParanoidNetwork/RequestKeyPiece", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ParanoidNetworkServer is the server API for ParanoidNetwork service.
type ParanoidNetworkServer interface {
	// Used for health checking and discovery. Sends the IP and port of the
	// PFSD instance running on the client.
	Ping(context.Context, *Node) (*EmptyMessage, error)
	// Used by a new node to let other nodes it is available to join the cluster.
	JoinCluster(context.Context, *JoinClusterRequest) (*EmptyMessage, error)
	// Used by a new node to create a new key generation before joining the cluster.
	NewGeneration(context.Context, *NewGenerationRequest) (*NewGenerationResponse, error)
	// Cryptography calls
	SendKeyPiece(context.Context, *KeyPieceSend) (*SendKeyPieceResponse, error)
	RequestKeyPiece(context.Context, *KeyPieceRequest) (*KeyPiece, error)
}

func RegisterParanoidNetworkServer(s *grpc.Server, srv ParanoidNetworkServer) {
	s.RegisterService(&_ParanoidNetwork_serviceDesc, srv)
}

func _ParanoidNetwork_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Node)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ParanoidNetworkServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paranoid.ParanoidNetwork/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ParanoidNetworkServer).Ping(ctx, req.(*Node))
	}
	return interceptor(ctx, in, info, handler)
}

func _ParanoidNetwork_JoinCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ParanoidNetworkServer).JoinCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paranoid.ParanoidNetwork/JoinCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ParanoidNetworkServer).JoinCluster(ctx, req.(*JoinClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ParanoidNetwork_NewGeneration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewGenerationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ParanoidNetworkServer).NewGeneration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paranoid.ParanoidNetwork/NewGeneration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ParanoidNetworkServer).NewGeneration(ctx, req.(*NewGenerationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ParanoidNetwork_SendKeyPiece_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyPieceSend)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ParanoidNetworkServer).SendKeyPiece(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paranoid.ParanoidNetwork/SendKeyPiece",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ParanoidNetworkServer).SendKeyPiece(ctx, req.(*KeyPieceSend))
	}
	return interceptor(ctx, in, info, handler)
}

func _ParanoidNetwork_RequestKeyPiece_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyPieceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ParanoidNetworkServer).RequestKeyPiece(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paranoid.ParanoidNetwork/RequestKeyPiece",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ParanoidNetworkServer).RequestKeyPiece(ctx, req.(*KeyPieceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ParanoidNetwork_serviceDesc = grpc.ServiceDesc{
	ServiceName: "paranoid.ParanoidNetwork",
	HandlerType: (*ParanoidNetworkServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _ParanoidNetwork_Ping_Handler,
		},
		{
			MethodName: "JoinCluster",
			Handler:    _ParanoidNetwork_JoinCluster_Handler,
		},
		{
			MethodName: "NewGeneration",
			Handler:    _ParanoidNetwork_NewGeneration_Handler,
		},
		{
			MethodName: "SendKeyPiece",
			Handler:    _ParanoidNetwork_SendKeyPiece_Handler,
		},
		{
			MethodName: "RequestKeyPiece",
			Handler:    _ParanoidNetwork_RequestKeyPiece_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "paranoidnetwork/paranoid.proto",
}

func init() {
	proto.RegisterFile("paranoidnetwork/paranoid.proto", fileDescriptor_paranoid_a19385314f01eacd)
}

var fileDescriptor_paranoid_a19385314f01eacd = []byte{
	// 578 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0xc1, 0x4e, 0x1b, 0x3d,
	0x10, 0x4e, 0xb2, 0x01, 0x85, 0x61, 0x49, 0x60, 0xc4, 0x8f, 0xf2, 0xa3, 0x0a, 0xd0, 0xb6, 0x07,
	0xa4, 0x16, 0x5a, 0xd1, 0x43, 0xef, 0xa5, 0xb4, 0x55, 0x2b, 0xa2, 0xc8, 0x15, 0x97, 0x5e, 0x56,
	0x0b, 0x3b, 0x8d, 0x2c, 0xb2, 0xb6, 0xb1, 0xbd, 0x8a, 0x78, 0x8d, 0x3e, 0x53, 0x1f, 0xa7, 0x0f,
	0x51, 0xd9, 0xde, 0x64, 0x03, 0xd9, 0x72, 0xeb, 0xcd, 0xf3, 0x7d, 0xde, 0xf9, 0x66, 0xbe, 0xf1,
	0x2c, 0x1c, 0xa8, 0x4c, 0x67, 0x42, 0xf2, 0x5c, 0x90, 0x9d, 0x49, 0x7d, 0xfb, 0x7a, 0x1e, 0x9f,
	0x2a, 0x2d, 0xad, 0xc4, 0xde, 0x3c, 0x4e, 0xfa, 0x10, 0x5f, 0x14, 0xca, 0xde, 0x5f, 0x92, 0x31,
	0xd9, 0x84, 0x92, 0x14, 0xba, 0x23, 0x99, 0x13, 0xf6, 0xa1, 0xc3, 0xd5, 0xb0, 0x7d, 0xd4, 0x3e,
	0xde, 0x60, 0x1d, 0xae, 0x10, 0xa1, 0xab, 0xa4, 0xb6, 0xc3, 0x8e, 0x47, 0xfc, 0x19, 0x0f, 0x61,
	0xf3, 0x46, 0x16, 0x85, 0x14, 0xa9, 0xc8, 0x0a, 0x1a, 0x46, 0x9e, 0x82, 0x00, 0x8d, 0xb2, 0x82,
	0xdc, 0x47, 0x65, 0xc9, 0xf3, 0x61, 0x37, 0x7c, 0xe4, 0xce, 0xc9, 0xcf, 0x36, 0xe0, 0x17, 0xc9,
	0xc5, 0xf9, 0xb4, 0x34, 0x96, 0x34, 0xa3, 0xbb, 0x92, 0x8c, 0xfd, 0x67, 0x7a, 0xf8, 0x1c, 0xb6,
	0x94, 0x94, 0xd3, 0x54, 0x65, 0xc6, 0xcc, 0xa4, 0xce, 0x87, 0x6b, 0x9e, 0x8c, 0x1d, 0x38, 0xae,
	0xb0, 0xc4, 0xc2, 0xee, 0x88, 0x66, 0x9f, 0x48, 0x90, 0xce, 0x2c, 0x97, 0x62, 0x5e, 0xd5, 0x3b,
	0x18, 0xe8, 0x70, 0xe4, 0x62, 0x92, 0x0a, 0x99, 0x93, 0x2f, 0x71, 0xf3, 0xac, 0x7f, 0xba, 0x70,
	0xd4, 0xd9, 0xc5, 0xfa, 0xf5, 0x35, 0x6f, 0xdf, 0x8a, 0x6a, 0xa7, 0x41, 0xf5, 0x3b, 0xfc, 0xf7,
	0x48, 0xd5, 0x28, 0x29, 0x0c, 0xe1, 0x4b, 0xd8, 0x99, 0x2c, 0xd0, 0x54, 0x94, 0xc5, 0x35, 0x69,
	0x2f, 0x1c, 0xb1, 0xed, 0x9a, 0x18, 0x79, 0x1c, 0x77, 0x61, 0x4d, 0x11, 0x69, 0x33, 0xec, 0x1c,
	0x45, 0xc7, 0x1b, 0x2c, 0x04, 0xc9, 0x15, 0x0c, 0xbe, 0xd2, 0xfd, 0x98, 0xd3, 0x0d, 0xcd, 0x9b,
	0x49, 0xa0, 0xfb, 0x44, 0x07, 0x9e, 0xc3, 0x03, 0x80, 0x5a, 0xc0, 0x17, 0x1d, 0xb1, 0x25, 0x24,
	0xf9, 0xd5, 0x86, 0xde, 0x3c, 0xaf, 0xb3, 0x3b, 0xcf, 0x6c, 0xe6, 0x13, 0xc6, 0xcc, 0x9f, 0xf1,
	0x04, 0x50, 0x65, 0x9a, 0x84, 0x4d, 0x7f, 0x70, 0x31, 0x21, 0xad, 0x34, 0x17, 0x61, 0x8a, 0x31,
	0xdb, 0x09, 0xcc, 0xc7, 0x9a, 0xf0, 0xc5, 0x6b, 0x5e, 0x0d, 0x33, 0x66, 0x21, 0xc0, 0x6d, 0x88,
	0x0c, 0xdd, 0xf9, 0x31, 0x46, 0xcc, 0x1d, 0xf1, 0x04, 0x40, 0xce, 0x04, 0xe9, 0x30, 0x83, 0xb5,
	0xc6, 0x0e, 0x36, 0xfc, 0x8d, 0xd1, 0x6a, 0x1b, 0xeb, 0x2b, 0x6d, 0x5c, 0x41, 0x3c, 0xef, 0xe2,
	0x1b, 0x89, 0x1c, 0x5f, 0x40, 0x74, 0x4b, 0xf7, 0x95, 0x33, 0x58, 0xe7, 0x5d, 0x58, 0xe8, 0x68,
	0xf7, 0xfe, 0xb2, 0x3c, 0x4f, 0x69, 0x4a, 0x05, 0x55, 0x4d, 0xf5, 0x18, 0x64, 0x79, 0x7e, 0x11,
	0x90, 0xe4, 0x03, 0xec, 0xba, 0x74, 0xb5, 0xf1, 0xd5, 0x3c, 0x5f, 0x01, 0xde, 0x4c, 0xb9, 0x33,
	0xa5, 0x28, 0x8d, 0x4d, 0xdd, 0x8b, 0xe5, 0xd6, 0xab, 0xf5, 0xd8, 0x76, 0x60, 0x2e, 0x4b, 0x63,
	0xcf, 0x3d, 0x7e, 0xf6, 0xbb, 0x03, 0x83, 0x71, 0x55, 0xc1, 0x28, 0xec, 0x2f, 0xbe, 0x81, 0xee,
	0x98, 0x8b, 0x09, 0x3e, 0xea, 0x79, 0x7f, 0xaf, 0x8e, 0x1f, 0xac, 0x71, 0x0b, 0x2f, 0x60, 0x73,
	0x69, 0xcd, 0xf0, 0x59, 0x7d, 0x71, 0x75, 0xfb, 0x9e, 0x48, 0xc3, 0x60, 0xeb, 0xc1, 0x1b, 0xc5,
	0x83, 0xa5, 0x0a, 0x1a, 0x56, 0x66, 0xff, 0xf0, 0xaf, 0x7c, 0x30, 0x23, 0x69, 0xe1, 0x67, 0x88,
	0x97, 0x6d, 0xc2, 0xbd, 0x55, 0xc3, 0x1d, 0xbf, 0xbf, 0x24, 0xd5, 0x64, 0x6b, 0xd2, 0xc2, 0xf7,
	0x30, 0xa8, 0x74, 0x17, 0xc9, 0xfe, 0x6f, 0x98, 0x5e, 0x55, 0x5a, 0xc3, 0x60, 0x93, 0xd6, 0xf5,
	0xba, 0xff, 0x25, 0xbe, 0xfd, 0x13, 0x00, 0x00, 0xff, 0xff, 0x77, 0x2b, 0xcd, 0x79, 0x34, 0x05,
	0x00, 0x00,
}
