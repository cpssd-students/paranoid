// Code generated by protoc-gen-go. DO NOT EDIT.
// source: raft/raft.proto

package raft

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type KeyStateCommand_KSMType int32

const (
	KeyStateCommand_UpdateKeyPiece KeyStateCommand_KSMType = 0
	KeyStateCommand_NewGeneration  KeyStateCommand_KSMType = 1
	KeyStateCommand_OwnerComplete  KeyStateCommand_KSMType = 2
)

var KeyStateCommand_KSMType_name = map[int32]string{
	0: "UpdateKeyPiece",
	1: "NewGeneration",
	2: "OwnerComplete",
}
var KeyStateCommand_KSMType_value = map[string]int32{
	"UpdateKeyPiece": 0,
	"NewGeneration":  1,
	"OwnerComplete":  2,
}

func (x KeyStateCommand_KSMType) String() string {
	return proto.EnumName(KeyStateCommand_KSMType_name, int32(x))
}
func (KeyStateCommand_KSMType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_raft_b907f75f9f2b9d40, []int{4, 0}
}

type Configuration_ConfigurationType int32

const (
	Configuration_CurrentConfiguration Configuration_ConfigurationType = 0
	Configuration_FutureConfiguration  Configuration_ConfigurationType = 1
)

var Configuration_ConfigurationType_name = map[int32]string{
	0: "CurrentConfiguration",
	1: "FutureConfiguration",
}
var Configuration_ConfigurationType_value = map[string]int32{
	"CurrentConfiguration": 0,
	"FutureConfiguration":  1,
}

func (x Configuration_ConfigurationType) String() string {
	return proto.EnumName(Configuration_ConfigurationType_name, int32(x))
}
func (Configuration_ConfigurationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_raft_b907f75f9f2b9d40, []int{6, 0}
}

type Entry_EntryType int32

const (
	Entry_StateMachineCommand Entry_EntryType = 0
	Entry_ConfigurationChange Entry_EntryType = 1
	Entry_Demo                Entry_EntryType = 2
	Entry_KeyStateCommand     Entry_EntryType = 3
)

var Entry_EntryType_name = map[int32]string{
	0: "StateMachineCommand",
	1: "ConfigurationChange",
	2: "Demo",
	3: "KeyStateCommand",
}
var Entry_EntryType_value = map[string]int32{
	"StateMachineCommand": 0,
	"ConfigurationChange": 1,
	"Demo":                2,
	"KeyStateCommand":     3,
}

func (x Entry_EntryType) String() string {
	return proto.EnumName(Entry_EntryType_name, int32(x))
}
func (Entry_EntryType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_raft_b907f75f9f2b9d40, []int{8, 0}
}

type EmptyMessage struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyMessage) Reset()         { *m = EmptyMessage{} }
func (m *EmptyMessage) String() string { return proto.CompactTextString(m) }
func (*EmptyMessage) ProtoMessage()    {}
func (*EmptyMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_b907f75f9f2b9d40, []int{0}
}
func (m *EmptyMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyMessage.Unmarshal(m, b)
}
func (m *EmptyMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyMessage.Marshal(b, m, deterministic)
}
func (dst *EmptyMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyMessage.Merge(dst, src)
}
func (m *EmptyMessage) XXX_Size() int {
	return xxx_messageInfo_EmptyMessage.Size(m)
}
func (m *EmptyMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyMessage.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyMessage proto.InternalMessageInfo

type EntryRequest struct {
	SenderId             string   `protobuf:"bytes,1,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	Entry                *Entry   `protobuf:"bytes,2,opt,name=entry,proto3" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntryRequest) Reset()         { *m = EntryRequest{} }
func (m *EntryRequest) String() string { return proto.CompactTextString(m) }
func (*EntryRequest) ProtoMessage()    {}
func (*EntryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_b907f75f9f2b9d40, []int{1}
}
func (m *EntryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntryRequest.Unmarshal(m, b)
}
func (m *EntryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntryRequest.Marshal(b, m, deterministic)
}
func (dst *EntryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntryRequest.Merge(dst, src)
}
func (m *EntryRequest) XXX_Size() int {
	return xxx_messageInfo_EntryRequest.Size(m)
}
func (m *EntryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EntryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EntryRequest proto.InternalMessageInfo

func (m *EntryRequest) GetSenderId() string {
	if m != nil {
		return m.SenderId
	}
	return ""
}

func (m *EntryRequest) GetEntry() *Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type AppendEntriesRequest struct {
	Term                 uint64   `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	LeaderId             string   `protobuf:"bytes,2,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	PrevLogIndex         uint64   `protobuf:"varint,3,opt,name=prev_log_index,json=prevLogIndex,proto3" json:"prev_log_index,omitempty"`
	PrevLogTerm          uint64   `protobuf:"varint,4,opt,name=prev_log_term,json=prevLogTerm,proto3" json:"prev_log_term,omitempty"`
	Entries              []*Entry `protobuf:"bytes,5,rep,name=entries,proto3" json:"entries,omitempty"`
	LeaderCommit         uint64   `protobuf:"varint,6,opt,name=leader_commit,json=leaderCommit,proto3" json:"leader_commit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppendEntriesRequest) Reset()         { *m = AppendEntriesRequest{} }
func (m *AppendEntriesRequest) String() string { return proto.CompactTextString(m) }
func (*AppendEntriesRequest) ProtoMessage()    {}
func (*AppendEntriesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_b907f75f9f2b9d40, []int{2}
}
func (m *AppendEntriesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendEntriesRequest.Unmarshal(m, b)
}
func (m *AppendEntriesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendEntriesRequest.Marshal(b, m, deterministic)
}
func (dst *AppendEntriesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendEntriesRequest.Merge(dst, src)
}
func (m *AppendEntriesRequest) XXX_Size() int {
	return xxx_messageInfo_AppendEntriesRequest.Size(m)
}
func (m *AppendEntriesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendEntriesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AppendEntriesRequest proto.InternalMessageInfo

func (m *AppendEntriesRequest) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *AppendEntriesRequest) GetLeaderId() string {
	if m != nil {
		return m.LeaderId
	}
	return ""
}

func (m *AppendEntriesRequest) GetPrevLogIndex() uint64 {
	if m != nil {
		return m.PrevLogIndex
	}
	return 0
}

func (m *AppendEntriesRequest) GetPrevLogTerm() uint64 {
	if m != nil {
		return m.PrevLogTerm
	}
	return 0
}

func (m *AppendEntriesRequest) GetEntries() []*Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func (m *AppendEntriesRequest) GetLeaderCommit() uint64 {
	if m != nil {
		return m.LeaderCommit
	}
	return 0
}

type StateMachineCommand struct {
	Type uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// Used for Write command
	Data   []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Offset int64  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	// Used for Write and Truncate commands
	Length int64 `protobuf:"varint,5,opt,name=length,proto3" json:"length,omitempty"`
	// Used for Link and Rename commands
	OldPath string `protobuf:"bytes,6,opt,name=old_path,json=oldPath,proto3" json:"old_path,omitempty"`
	NewPath string `protobuf:"bytes,7,opt,name=new_path,json=newPath,proto3" json:"new_path,omitempty"`
	// Used for Create, Chmod and Mkdir commands
	Mode uint32 `protobuf:"varint,8,opt,name=mode,proto3" json:"mode,omitempty"`
	// Used for Utimes command
	AccessSeconds        int64    `protobuf:"varint,9,opt,name=access_seconds,json=accessSeconds,proto3" json:"access_seconds,omitempty"`
	AccessNanoseconds    int64    `protobuf:"varint,10,opt,name=access_nanoseconds,json=accessNanoseconds,proto3" json:"access_nanoseconds,omitempty"`
	ModifySeconds        int64    `protobuf:"varint,11,opt,name=modify_seconds,json=modifySeconds,proto3" json:"modify_seconds,omitempty"`
	ModifyNanoseconds    int64    `protobuf:"varint,12,opt,name=modify_nanoseconds,json=modifyNanoseconds,proto3" json:"modify_nanoseconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StateMachineCommand) Reset()         { *m = StateMachineCommand{} }
func (m *StateMachineCommand) String() string { return proto.CompactTextString(m) }
func (*StateMachineCommand) ProtoMessage()    {}
func (*StateMachineCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_b907f75f9f2b9d40, []int{3}
}
func (m *StateMachineCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StateMachineCommand.Unmarshal(m, b)
}
func (m *StateMachineCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StateMachineCommand.Marshal(b, m, deterministic)
}
func (dst *StateMachineCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StateMachineCommand.Merge(dst, src)
}
func (m *StateMachineCommand) XXX_Size() int {
	return xxx_messageInfo_StateMachineCommand.Size(m)
}
func (m *StateMachineCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_StateMachineCommand.DiscardUnknown(m)
}

var xxx_messageInfo_StateMachineCommand proto.InternalMessageInfo

func (m *StateMachineCommand) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *StateMachineCommand) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *StateMachineCommand) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *StateMachineCommand) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *StateMachineCommand) GetLength() int64 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *StateMachineCommand) GetOldPath() string {
	if m != nil {
		return m.OldPath
	}
	return ""
}

func (m *StateMachineCommand) GetNewPath() string {
	if m != nil {
		return m.NewPath
	}
	return ""
}

func (m *StateMachineCommand) GetMode() uint32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

func (m *StateMachineCommand) GetAccessSeconds() int64 {
	if m != nil {
		return m.AccessSeconds
	}
	return 0
}

func (m *StateMachineCommand) GetAccessNanoseconds() int64 {
	if m != nil {
		return m.AccessNanoseconds
	}
	return 0
}

func (m *StateMachineCommand) GetModifySeconds() int64 {
	if m != nil {
		return m.ModifySeconds
	}
	return 0
}

func (m *StateMachineCommand) GetModifyNanoseconds() int64 {
	if m != nil {
		return m.ModifyNanoseconds
	}
	return 0
}

type KeyStateCommand struct {
	Type KeyStateCommand_KSMType `protobuf:"varint,1,opt,name=type,proto3,enum=raft.KeyStateCommand_KSMType" json:"type,omitempty"`
	// UpdateKeyPiece arguments
	KeyOwner   *Node `protobuf:"bytes,2,opt,name=key_owner,json=keyOwner,proto3" json:"key_owner,omitempty"`
	KeyHolder  *Node `protobuf:"bytes,3,opt,name=key_holder,json=keyHolder,proto3" json:"key_holder,omitempty"`
	Generation int64 `protobuf:"varint,4,opt,name=generation,proto3" json:"generation,omitempty"`
	// NewGeneration arguments
	NewNode string `protobuf:"bytes,5,opt,name=new_node,json=newNode,proto3" json:"new_node,omitempty"`
	// OwnerCompete arguments
	OwnerComplete        string   `protobuf:"bytes,6,opt,name=owner_complete,json=ownerComplete,proto3" json:"owner_complete,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyStateCommand) Reset()         { *m = KeyStateCommand{} }
func (m *KeyStateCommand) String() string { return proto.CompactTextString(m) }
func (*KeyStateCommand) ProtoMessage()    {}
func (*KeyStateCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_b907f75f9f2b9d40, []int{4}
}
func (m *KeyStateCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyStateCommand.Unmarshal(m, b)
}
func (m *KeyStateCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyStateCommand.Marshal(b, m, deterministic)
}
func (dst *KeyStateCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyStateCommand.Merge(dst, src)
}
func (m *KeyStateCommand) XXX_Size() int {
	return xxx_messageInfo_KeyStateCommand.Size(m)
}
func (m *KeyStateCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyStateCommand.DiscardUnknown(m)
}

var xxx_messageInfo_KeyStateCommand proto.InternalMessageInfo

func (m *KeyStateCommand) GetType() KeyStateCommand_KSMType {
	if m != nil {
		return m.Type
	}
	return KeyStateCommand_UpdateKeyPiece
}

func (m *KeyStateCommand) GetKeyOwner() *Node {
	if m != nil {
		return m.KeyOwner
	}
	return nil
}

func (m *KeyStateCommand) GetKeyHolder() *Node {
	if m != nil {
		return m.KeyHolder
	}
	return nil
}

func (m *KeyStateCommand) GetGeneration() int64 {
	if m != nil {
		return m.Generation
	}
	return 0
}

func (m *KeyStateCommand) GetNewNode() string {
	if m != nil {
		return m.NewNode
	}
	return ""
}

func (m *KeyStateCommand) GetOwnerComplete() string {
	if m != nil {
		return m.OwnerComplete
	}
	return ""
}

type Node struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port                 string   `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	CommonName           string   `protobuf:"bytes,3,opt,name=common_name,json=commonName,proto3" json:"common_name,omitempty"`
	NodeId               string   `protobuf:"bytes,4,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_b907f75f9f2b9d40, []int{5}
}
func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (dst *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(dst, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Node) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *Node) GetCommonName() string {
	if m != nil {
		return m.CommonName
	}
	return ""
}

func (m *Node) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

type Configuration struct {
	Type                 Configuration_ConfigurationType `protobuf:"varint,1,opt,name=type,proto3,enum=raft.Configuration_ConfigurationType" json:"type,omitempty"`
	Nodes                []*Node                         `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *Configuration) Reset()         { *m = Configuration{} }
func (m *Configuration) String() string { return proto.CompactTextString(m) }
func (*Configuration) ProtoMessage()    {}
func (*Configuration) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_b907f75f9f2b9d40, []int{6}
}
func (m *Configuration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Configuration.Unmarshal(m, b)
}
func (m *Configuration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Configuration.Marshal(b, m, deterministic)
}
func (dst *Configuration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Configuration.Merge(dst, src)
}
func (m *Configuration) XXX_Size() int {
	return xxx_messageInfo_Configuration.Size(m)
}
func (m *Configuration) XXX_DiscardUnknown() {
	xxx_messageInfo_Configuration.DiscardUnknown(m)
}

var xxx_messageInfo_Configuration proto.InternalMessageInfo

func (m *Configuration) GetType() Configuration_ConfigurationType {
	if m != nil {
		return m.Type
	}
	return Configuration_CurrentConfiguration
}

func (m *Configuration) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type DemoCommand struct {
	Number               uint64   `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DemoCommand) Reset()         { *m = DemoCommand{} }
func (m *DemoCommand) String() string { return proto.CompactTextString(m) }
func (*DemoCommand) ProtoMessage()    {}
func (*DemoCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_b907f75f9f2b9d40, []int{7}
}
func (m *DemoCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DemoCommand.Unmarshal(m, b)
}
func (m *DemoCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DemoCommand.Marshal(b, m, deterministic)
}
func (dst *DemoCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DemoCommand.Merge(dst, src)
}
func (m *DemoCommand) XXX_Size() int {
	return xxx_messageInfo_DemoCommand.Size(m)
}
func (m *DemoCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_DemoCommand.DiscardUnknown(m)
}

var xxx_messageInfo_DemoCommand proto.InternalMessageInfo

func (m *DemoCommand) GetNumber() uint64 {
	if m != nil {
		return m.Number
	}
	return 0
}

type Entry struct {
	Type                 Entry_EntryType      `protobuf:"varint,1,opt,name=type,proto3,enum=raft.Entry_EntryType" json:"type,omitempty"`
	Uuid                 string               `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Command              *StateMachineCommand `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`
	Config               *Configuration       `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty"`
	Demo                 *DemoCommand         `protobuf:"bytes,5,opt,name=demo,proto3" json:"demo,omitempty"`
	KeyCommand           *KeyStateCommand     `protobuf:"bytes,6,opt,name=key_command,json=keyCommand,proto3" json:"key_command,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Entry) Reset()         { *m = Entry{} }
func (m *Entry) String() string { return proto.CompactTextString(m) }
func (*Entry) ProtoMessage()    {}
func (*Entry) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_b907f75f9f2b9d40, []int{8}
}
func (m *Entry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entry.Unmarshal(m, b)
}
func (m *Entry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entry.Marshal(b, m, deterministic)
}
func (dst *Entry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entry.Merge(dst, src)
}
func (m *Entry) XXX_Size() int {
	return xxx_messageInfo_Entry.Size(m)
}
func (m *Entry) XXX_DiscardUnknown() {
	xxx_messageInfo_Entry.DiscardUnknown(m)
}

var xxx_messageInfo_Entry proto.InternalMessageInfo

func (m *Entry) GetType() Entry_EntryType {
	if m != nil {
		return m.Type
	}
	return Entry_StateMachineCommand
}

func (m *Entry) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Entry) GetCommand() *StateMachineCommand {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *Entry) GetConfig() *Configuration {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *Entry) GetDemo() *DemoCommand {
	if m != nil {
		return m.Demo
	}
	return nil
}

func (m *Entry) GetKeyCommand() *KeyStateCommand {
	if m != nil {
		return m.KeyCommand
	}
	return nil
}

type LogEntry struct {
	Term                 uint64   `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Entry                *Entry   `protobuf:"bytes,2,opt,name=entry,proto3" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogEntry) Reset()         { *m = LogEntry{} }
func (m *LogEntry) String() string { return proto.CompactTextString(m) }
func (*LogEntry) ProtoMessage()    {}
func (*LogEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_b907f75f9f2b9d40, []int{9}
}
func (m *LogEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogEntry.Unmarshal(m, b)
}
func (m *LogEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogEntry.Marshal(b, m, deterministic)
}
func (dst *LogEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogEntry.Merge(dst, src)
}
func (m *LogEntry) XXX_Size() int {
	return xxx_messageInfo_LogEntry.Size(m)
}
func (m *LogEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_LogEntry.DiscardUnknown(m)
}

var xxx_messageInfo_LogEntry proto.InternalMessageInfo

func (m *LogEntry) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *LogEntry) GetEntry() *Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type AppendEntriesResponse struct {
	Term                 uint64   `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	NextIndex            uint64   `protobuf:"varint,2,opt,name=next_index,json=nextIndex,proto3" json:"next_index,omitempty"`
	Success              bool     `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppendEntriesResponse) Reset()         { *m = AppendEntriesResponse{} }
func (m *AppendEntriesResponse) String() string { return proto.CompactTextString(m) }
func (*AppendEntriesResponse) ProtoMessage()    {}
func (*AppendEntriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_b907f75f9f2b9d40, []int{10}
}
func (m *AppendEntriesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendEntriesResponse.Unmarshal(m, b)
}
func (m *AppendEntriesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendEntriesResponse.Marshal(b, m, deterministic)
}
func (dst *AppendEntriesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendEntriesResponse.Merge(dst, src)
}
func (m *AppendEntriesResponse) XXX_Size() int {
	return xxx_messageInfo_AppendEntriesResponse.Size(m)
}
func (m *AppendEntriesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendEntriesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AppendEntriesResponse proto.InternalMessageInfo

func (m *AppendEntriesResponse) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *AppendEntriesResponse) GetNextIndex() uint64 {
	if m != nil {
		return m.NextIndex
	}
	return 0
}

func (m *AppendEntriesResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type RequestVoteRequest struct {
	Term                 uint64   `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	CandidateId          string   `protobuf:"bytes,2,opt,name=candidate_id,json=candidateId,proto3" json:"candidate_id,omitempty"`
	LastLogIndex         uint64   `protobuf:"varint,3,opt,name=last_log_index,json=lastLogIndex,proto3" json:"last_log_index,omitempty"`
	LastLogTerm          uint64   `protobuf:"varint,4,opt,name=last_log_term,json=lastLogTerm,proto3" json:"last_log_term,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestVoteRequest) Reset()         { *m = RequestVoteRequest{} }
func (m *RequestVoteRequest) String() string { return proto.CompactTextString(m) }
func (*RequestVoteRequest) ProtoMessage()    {}
func (*RequestVoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_b907f75f9f2b9d40, []int{11}
}
func (m *RequestVoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestVoteRequest.Unmarshal(m, b)
}
func (m *RequestVoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestVoteRequest.Marshal(b, m, deterministic)
}
func (dst *RequestVoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestVoteRequest.Merge(dst, src)
}
func (m *RequestVoteRequest) XXX_Size() int {
	return xxx_messageInfo_RequestVoteRequest.Size(m)
}
func (m *RequestVoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestVoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RequestVoteRequest proto.InternalMessageInfo

func (m *RequestVoteRequest) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *RequestVoteRequest) GetCandidateId() string {
	if m != nil {
		return m.CandidateId
	}
	return ""
}

func (m *RequestVoteRequest) GetLastLogIndex() uint64 {
	if m != nil {
		return m.LastLogIndex
	}
	return 0
}

func (m *RequestVoteRequest) GetLastLogTerm() uint64 {
	if m != nil {
		return m.LastLogTerm
	}
	return 0
}

type RequestVoteResponse struct {
	Term                 uint64   `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	VoteGranted          bool     `protobuf:"varint,2,opt,name=vote_granted,json=voteGranted,proto3" json:"vote_granted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestVoteResponse) Reset()         { *m = RequestVoteResponse{} }
func (m *RequestVoteResponse) String() string { return proto.CompactTextString(m) }
func (*RequestVoteResponse) ProtoMessage()    {}
func (*RequestVoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_b907f75f9f2b9d40, []int{12}
}
func (m *RequestVoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestVoteResponse.Unmarshal(m, b)
}
func (m *RequestVoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestVoteResponse.Marshal(b, m, deterministic)
}
func (dst *RequestVoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestVoteResponse.Merge(dst, src)
}
func (m *RequestVoteResponse) XXX_Size() int {
	return xxx_messageInfo_RequestVoteResponse.Size(m)
}
func (m *RequestVoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestVoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RequestVoteResponse proto.InternalMessageInfo

func (m *RequestVoteResponse) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *RequestVoteResponse) GetVoteGranted() bool {
	if m != nil {
		return m.VoteGranted
	}
	return false
}

type SnapshotRequest struct {
	Term                 uint64   `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	LeaderId             string   `protobuf:"bytes,2,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	LastIncludedIndex    uint64   `protobuf:"varint,3,opt,name=last_included_index,json=lastIncludedIndex,proto3" json:"last_included_index,omitempty"`
	LastIncludedTerm     uint64   `protobuf:"varint,4,opt,name=last_included_term,json=lastIncludedTerm,proto3" json:"last_included_term,omitempty"`
	Offset               uint64   `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	Data                 []byte   `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	Done                 bool     `protobuf:"varint,7,opt,name=done,proto3" json:"done,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnapshotRequest) Reset()         { *m = SnapshotRequest{} }
func (m *SnapshotRequest) String() string { return proto.CompactTextString(m) }
func (*SnapshotRequest) ProtoMessage()    {}
func (*SnapshotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_b907f75f9f2b9d40, []int{13}
}
func (m *SnapshotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnapshotRequest.Unmarshal(m, b)
}
func (m *SnapshotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnapshotRequest.Marshal(b, m, deterministic)
}
func (dst *SnapshotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnapshotRequest.Merge(dst, src)
}
func (m *SnapshotRequest) XXX_Size() int {
	return xxx_messageInfo_SnapshotRequest.Size(m)
}
func (m *SnapshotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SnapshotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SnapshotRequest proto.InternalMessageInfo

func (m *SnapshotRequest) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *SnapshotRequest) GetLeaderId() string {
	if m != nil {
		return m.LeaderId
	}
	return ""
}

func (m *SnapshotRequest) GetLastIncludedIndex() uint64 {
	if m != nil {
		return m.LastIncludedIndex
	}
	return 0
}

func (m *SnapshotRequest) GetLastIncludedTerm() uint64 {
	if m != nil {
		return m.LastIncludedTerm
	}
	return 0
}

func (m *SnapshotRequest) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *SnapshotRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SnapshotRequest) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

type SnapshotResponse struct {
	Term                 uint64   `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnapshotResponse) Reset()         { *m = SnapshotResponse{} }
func (m *SnapshotResponse) String() string { return proto.CompactTextString(m) }
func (*SnapshotResponse) ProtoMessage()    {}
func (*SnapshotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_b907f75f9f2b9d40, []int{14}
}
func (m *SnapshotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnapshotResponse.Unmarshal(m, b)
}
func (m *SnapshotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnapshotResponse.Marshal(b, m, deterministic)
}
func (dst *SnapshotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnapshotResponse.Merge(dst, src)
}
func (m *SnapshotResponse) XXX_Size() int {
	return xxx_messageInfo_SnapshotResponse.Size(m)
}
func (m *SnapshotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SnapshotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SnapshotResponse proto.InternalMessageInfo

func (m *SnapshotResponse) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func init() {
	proto.RegisterType((*EmptyMessage)(nil), "raft.EmptyMessage")
	proto.RegisterType((*EntryRequest)(nil), "raft.EntryRequest")
	proto.RegisterType((*AppendEntriesRequest)(nil), "raft.AppendEntriesRequest")
	proto.RegisterType((*StateMachineCommand)(nil), "raft.StateMachineCommand")
	proto.RegisterType((*KeyStateCommand)(nil), "raft.KeyStateCommand")
	proto.RegisterType((*Node)(nil), "raft.Node")
	proto.RegisterType((*Configuration)(nil), "raft.Configuration")
	proto.RegisterType((*DemoCommand)(nil), "raft.DemoCommand")
	proto.RegisterType((*Entry)(nil), "raft.Entry")
	proto.RegisterType((*LogEntry)(nil), "raft.LogEntry")
	proto.RegisterType((*AppendEntriesResponse)(nil), "raft.AppendEntriesResponse")
	proto.RegisterType((*RequestVoteRequest)(nil), "raft.RequestVoteRequest")
	proto.RegisterType((*RequestVoteResponse)(nil), "raft.RequestVoteResponse")
	proto.RegisterType((*SnapshotRequest)(nil), "raft.SnapshotRequest")
	proto.RegisterType((*SnapshotResponse)(nil), "raft.SnapshotResponse")
	proto.RegisterEnum("raft.KeyStateCommand_KSMType", KeyStateCommand_KSMType_name, KeyStateCommand_KSMType_value)
	proto.RegisterEnum("raft.Configuration_ConfigurationType", Configuration_ConfigurationType_name, Configuration_ConfigurationType_value)
	proto.RegisterEnum("raft.Entry_EntryType", Entry_EntryType_name, Entry_EntryType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RaftNetworkClient is the client API for RaftNetwork service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RaftNetworkClient interface {
	AppendEntries(ctx context.Context, in *AppendEntriesRequest, opts ...grpc.CallOption) (*AppendEntriesResponse, error)
	RequestVote(ctx context.Context, in *RequestVoteRequest, opts ...grpc.CallOption) (*RequestVoteResponse, error)
	ClientToLeaderRequest(ctx context.Context, in *EntryRequest, opts ...grpc.CallOption) (*EmptyMessage, error)
	InstallSnapshot(ctx context.Context, in *SnapshotRequest, opts ...grpc.CallOption) (*SnapshotResponse, error)
}

type raftNetworkClient struct {
	cc *grpc.ClientConn
}

func NewRaftNetworkClient(cc *grpc.ClientConn) RaftNetworkClient {
	return &raftNetworkClient{cc}
}

func (c *raftNetworkClient) AppendEntries(ctx context.Context, in *AppendEntriesRequest, opts ...grpc.CallOption) (*AppendEntriesResponse, error) {
	out := new(AppendEntriesResponse)
	err := c.cc.Invoke(ctx, "/raft.RaftNetwork/AppendEntries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raftNetworkClient) RequestVote(ctx context.Context, in *RequestVoteRequest, opts ...grpc.CallOption) (*RequestVoteResponse, error) {
	out := new(RequestVoteResponse)
	err := c.cc.Invoke(ctx, "/raft.RaftNetwork/RequestVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raftNetworkClient) ClientToLeaderRequest(ctx context.Context, in *EntryRequest, opts ...grpc.CallOption) (*EmptyMessage, error) {
	out := new(EmptyMessage)
	err := c.cc.Invoke(ctx, "/raft.RaftNetwork/ClientToLeaderRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raftNetworkClient) InstallSnapshot(ctx context.Context, in *SnapshotRequest, opts ...grpc.CallOption) (*SnapshotResponse, error) {
	out := new(SnapshotResponse)
	err := c.cc.Invoke(ctx, "/raft.RaftNetwork/InstallSnapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RaftNetworkServer is the server API for RaftNetwork service.
type RaftNetworkServer interface {
	AppendEntries(context.Context, *AppendEntriesRequest) (*AppendEntriesResponse, error)
	RequestVote(context.Context, *RequestVoteRequest) (*RequestVoteResponse, error)
	ClientToLeaderRequest(context.Context, *EntryRequest) (*EmptyMessage, error)
	InstallSnapshot(context.Context, *SnapshotRequest) (*SnapshotResponse, error)
}

func RegisterRaftNetworkServer(s *grpc.Server, srv RaftNetworkServer) {
	s.RegisterService(&_RaftNetwork_serviceDesc, srv)
}

func _RaftNetwork_AppendEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppendEntriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftNetworkServer).AppendEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/raft.RaftNetwork/AppendEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftNetworkServer).AppendEntries(ctx, req.(*AppendEntriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RaftNetwork_RequestVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestVoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftNetworkServer).RequestVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/raft.RaftNetwork/RequestVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftNetworkServer).RequestVote(ctx, req.(*RequestVoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RaftNetwork_ClientToLeaderRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftNetworkServer).ClientToLeaderRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/raft.RaftNetwork/ClientToLeaderRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftNetworkServer).ClientToLeaderRequest(ctx, req.(*EntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RaftNetwork_InstallSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SnapshotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftNetworkServer).InstallSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/raft.RaftNetwork/InstallSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftNetworkServer).InstallSnapshot(ctx, req.(*SnapshotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RaftNetwork_serviceDesc = grpc.ServiceDesc{
	ServiceName: "raft.RaftNetwork",
	HandlerType: (*RaftNetworkServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AppendEntries",
			Handler:    _RaftNetwork_AppendEntries_Handler,
		},
		{
			MethodName: "RequestVote",
			Handler:    _RaftNetwork_RequestVote_Handler,
		},
		{
			MethodName: "ClientToLeaderRequest",
			Handler:    _RaftNetwork_ClientToLeaderRequest_Handler,
		},
		{
			MethodName: "InstallSnapshot",
			Handler:    _RaftNetwork_InstallSnapshot_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "raft/raft.proto",
}

func init() { proto.RegisterFile("raft/raft.proto", fileDescriptor_raft_b907f75f9f2b9d40) }

var fileDescriptor_raft_b907f75f9f2b9d40 = []byte{
	// 1139 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0xdd, 0x6e, 0x1b, 0x45,
	0x14, 0x8e, 0x37, 0xfe, 0x3d, 0x6b, 0x3b, 0xce, 0xb8, 0x69, 0xb7, 0xa9, 0x0a, 0xc9, 0x42, 0xa0,
	0x15, 0x10, 0x44, 0x2a, 0x21, 0x71, 0x19, 0xdc, 0x1f, 0x4c, 0x12, 0x37, 0xda, 0x04, 0xae, 0x90,
	0xac, 0xa9, 0xe7, 0xd8, 0x5e, 0x65, 0x3d, 0xb3, 0xec, 0x8e, 0x9b, 0xfa, 0x41, 0x78, 0x05, 0x9e,
	0x80, 0x7b, 0x9e, 0x04, 0x89, 0x1b, 0x9e, 0x81, 0x5b, 0x34, 0x3f, 0xbb, 0xd9, 0x4d, 0x4c, 0x85,
	0xb8, 0xb1, 0x66, 0xbe, 0xf3, 0xed, 0xf9, 0x3f, 0x73, 0x0c, 0x5b, 0x09, 0x9d, 0xca, 0x2f, 0xd5,
	0xcf, 0x61, 0x9c, 0x08, 0x29, 0x48, 0x55, 0x9d, 0xfd, 0x2e, 0xb4, 0x5f, 0x2c, 0x62, 0xb9, 0x3a,
	0xc3, 0x34, 0xa5, 0x33, 0xf4, 0x47, 0xd0, 0x7e, 0xc1, 0x65, 0xb2, 0x0a, 0xf0, 0xe7, 0x25, 0xa6,
	0x92, 0x3c, 0x82, 0x56, 0x8a, 0x9c, 0x61, 0x32, 0x0e, 0x99, 0x57, 0xd9, 0xab, 0x3c, 0x69, 0x05,
	0x4d, 0x03, 0x0c, 0x19, 0xd9, 0x87, 0x1a, 0x2a, 0xb2, 0xe7, 0xec, 0x55, 0x9e, 0xb8, 0x47, 0xee,
	0xa1, 0x56, 0x6f, 0xbe, 0x37, 0x12, 0xff, 0x8f, 0x0a, 0xdc, 0x3b, 0x8e, 0x63, 0xe4, 0x4c, 0xc1,
	0x21, 0xa6, 0x99, 0x62, 0x02, 0x55, 0x89, 0xc9, 0x42, 0xeb, 0xac, 0x06, 0xfa, 0xac, 0x8c, 0x45,
	0x48, 0xad, 0x31, 0xc7, 0x18, 0x33, 0xc0, 0x90, 0x91, 0x8f, 0xa1, 0x1b, 0x27, 0xf8, 0x76, 0x1c,
	0x89, 0xd9, 0x38, 0xe4, 0x0c, 0xdf, 0x79, 0x9b, 0xfa, 0xd3, 0xb6, 0x42, 0x4f, 0xc5, 0x6c, 0xa8,
	0x30, 0xe2, 0x43, 0x27, 0x67, 0x69, 0xfd, 0x55, 0x4d, 0x72, 0x2d, 0xe9, 0x52, 0x99, 0x39, 0x80,
	0x06, 0x1a, 0x67, 0xbc, 0xda, 0xde, 0xe6, 0x6d, 0xc7, 0x33, 0x19, 0xf9, 0x08, 0x3a, 0xd6, 0x9b,
	0x89, 0x58, 0x2c, 0x42, 0xe9, 0xd5, 0x8d, 0x3d, 0x03, 0x0e, 0x34, 0xe6, 0xff, 0xed, 0x40, 0xff,
	0x42, 0x52, 0x89, 0x67, 0x74, 0x32, 0x0f, 0x39, 0x2a, 0x98, 0x72, 0xa6, 0xc3, 0x5b, 0xc5, 0xa8,
	0xc3, 0xeb, 0x04, 0xfa, 0xac, 0xb0, 0x98, 0xca, 0xb9, 0x8d, 0x4c, 0x9f, 0x15, 0xc6, 0xa8, 0xa4,
	0x3a, 0x96, 0x76, 0xa0, 0xcf, 0xe4, 0x3e, 0xd4, 0xc5, 0x74, 0x9a, 0xa2, 0xd4, 0xce, 0x6f, 0x06,
	0xf6, 0xa6, 0xf0, 0x08, 0xf9, 0x4c, 0xce, 0xbd, 0x9a, 0xc1, 0xcd, 0x8d, 0x3c, 0x84, 0xa6, 0x88,
	0xd8, 0x58, 0xeb, 0xae, 0x6b, 0xdd, 0x0d, 0x11, 0xb1, 0x73, 0x6a, 0x44, 0x1c, 0xaf, 0x8d, 0xa8,
	0x61, 0x44, 0x1c, 0xaf, 0xcf, 0xad, 0xe5, 0x85, 0x60, 0xe8, 0x35, 0x8d, 0x87, 0xea, 0x4c, 0x0e,
	0xa0, 0x4b, 0x27, 0x13, 0x4c, 0xd3, 0x71, 0x8a, 0x13, 0xc1, 0x59, 0xea, 0xb5, 0xb4, 0xa5, 0x8e,
	0x41, 0x2f, 0x0c, 0x48, 0xbe, 0x00, 0x62, 0x69, 0x9c, 0x72, 0x91, 0x51, 0x41, 0x53, 0xb7, 0x8d,
	0x64, 0x74, 0x23, 0x50, 0x5a, 0x17, 0x82, 0x85, 0xd3, 0x55, 0xae, 0xd5, 0x35, 0x5a, 0x0d, 0x5a,
	0xd0, 0x6a, 0x69, 0x45, 0xad, 0x6d, 0xa3, 0xd5, 0x48, 0x0a, 0x5a, 0xfd, 0xdf, 0x1d, 0xd8, 0x3a,
	0xc1, 0x95, 0x4e, 0x7e, 0x96, 0xf5, 0xaf, 0x0a, 0x59, 0xef, 0x1e, 0x3d, 0x36, 0x65, 0xbd, 0x45,
	0x3a, 0x3c, 0xb9, 0x38, 0xbb, 0x5c, 0xc5, 0x68, 0x8b, 0xf2, 0x29, 0xb4, 0xae, 0x70, 0x35, 0x16,
	0xd7, 0x1c, 0x13, 0xdb, 0xc7, 0x60, 0xbe, 0x1b, 0x09, 0x86, 0x41, 0xf3, 0x0a, 0x57, 0xaf, 0x95,
	0x8c, 0x3c, 0x05, 0x50, 0xc4, 0xb9, 0x88, 0x18, 0x26, 0xba, 0x5e, 0x65, 0xa6, 0x52, 0xf3, 0x9d,
	0x16, 0x92, 0x0f, 0x00, 0x66, 0xc8, 0x31, 0xa1, 0x32, 0x14, 0xdc, 0x16, 0xb1, 0x80, 0x64, 0x55,
	0xe1, 0x2a, 0xfd, 0xb5, 0xbc, 0x2a, 0x23, 0x5b, 0x01, 0xed, 0x8a, 0xea, 0xb9, 0x38, 0x42, 0x89,
	0xb6, 0xa2, 0x1d, 0x8d, 0x0e, 0x2c, 0xe8, 0x0f, 0xa0, 0x61, 0xc3, 0x20, 0x04, 0xba, 0x3f, 0xc4,
	0x8c, 0x4a, 0x3c, 0xc1, 0xd5, 0x79, 0x88, 0x13, 0xec, 0x6d, 0x90, 0x6d, 0xe8, 0x8c, 0xf0, 0xfa,
	0x55, 0x6e, 0xb1, 0x57, 0x51, 0xd0, 0xeb, 0xa2, 0x8a, 0x9e, 0xe3, 0x33, 0xa8, 0x6a, 0x9b, 0x5d,
	0x70, 0xc2, 0xd8, 0x0e, 0xb7, 0x13, 0xc6, 0xba, 0x4f, 0x45, 0x22, 0xf3, 0x3e, 0x15, 0x89, 0x24,
	0x1f, 0x82, 0xab, 0xa6, 0x40, 0xf0, 0x31, 0xa7, 0x0b, 0xd4, 0xe1, 0xb7, 0x02, 0x30, 0xd0, 0x88,
	0x2e, 0x90, 0x3c, 0x80, 0x86, 0x8a, 0x47, 0x4d, 0x6e, 0x55, 0x0b, 0xeb, 0xea, 0x3a, 0x64, 0xfe,
	0x6f, 0x15, 0xe8, 0x0c, 0x04, 0x9f, 0x86, 0xb3, 0xa5, 0x0d, 0xff, 0x9b, 0x52, 0x95, 0x0e, 0x4c,
	0x0e, 0x4b, 0x94, 0xf2, 0xad, 0x50, 0xad, 0x3d, 0xa8, 0x29, 0xb5, 0xa9, 0xe7, 0xe8, 0xc1, 0x2d,
	0xe6, 0xdf, 0x08, 0xfc, 0x97, 0xb0, 0x7d, 0xe7, 0x63, 0xe2, 0xc1, 0xbd, 0xc1, 0x32, 0x49, 0x90,
	0xcb, 0x92, 0xac, 0xb7, 0x41, 0x1e, 0x40, 0xff, 0xe5, 0x52, 0x2e, 0x13, 0x2c, 0x0b, 0x2a, 0xfe,
	0x01, 0xb8, 0xcf, 0x71, 0x21, 0xb2, 0xce, 0xba, 0x0f, 0x75, 0xbe, 0x5c, 0xbc, 0xc1, 0xc4, 0x3e,
	0x58, 0xf6, 0xe6, 0xff, 0xe5, 0x40, 0x4d, 0xbf, 0x1b, 0xe4, 0x69, 0x29, 0xaa, 0x9d, 0xc2, 0x93,
	0x62, 0x7e, 0x0b, 0x51, 0x10, 0xa8, 0x2e, 0x97, 0xf9, 0x13, 0xa7, 0xcf, 0xe4, 0x19, 0x34, 0x26,
	0xc6, 0x96, 0xed, 0xad, 0x87, 0x46, 0xc3, 0x9a, 0xc7, 0x25, 0xc8, 0x98, 0xe4, 0x33, 0xa8, 0x4f,
	0xb4, 0xdf, 0x3a, 0xe7, 0xee, 0x51, 0x7f, 0x4d, 0x2e, 0x03, 0x4b, 0x21, 0x07, 0x50, 0x65, 0xb8,
	0x10, 0xba, 0xe3, 0xdc, 0xa3, 0x6d, 0x43, 0x2d, 0xc4, 0x18, 0x68, 0x31, 0xf9, 0x1a, 0x5c, 0xd5,
	0xe7, 0x99, 0x33, 0x75, 0xcd, 0xde, 0x59, 0x3b, 0x4a, 0x81, 0x9a, 0x08, 0x7b, 0xf6, 0x7f, 0x82,
	0x56, 0x1e, 0xa7, 0x4a, 0xeb, 0x1a, 0xc7, 0x4d, 0xbe, 0x4b, 0xde, 0x0d, 0xe6, 0x94, 0xcf, 0xb0,
	0x57, 0x21, 0x4d, 0xa8, 0x2a, 0x5f, 0x7a, 0x0e, 0xe9, 0xdf, 0x99, 0xeb, 0xde, 0xa6, 0x7f, 0x0c,
	0xcd, 0x53, 0x31, 0x33, 0x99, 0x5e, 0xb7, 0x3a, 0xfe, 0xc3, 0x2a, 0x62, 0xb0, 0x73, 0x6b, 0x13,
	0xa5, 0xb1, 0xe0, 0x29, 0xae, 0xd5, 0xf7, 0x18, 0x80, 0xe3, 0x3b, 0x69, 0x37, 0x8d, 0xa3, 0x25,
	0x2d, 0x85, 0x98, 0x35, 0xe3, 0x41, 0x23, 0x5d, 0xea, 0x87, 0x4e, 0x57, 0xab, 0x19, 0x64, 0x57,
	0xff, 0x97, 0x0a, 0x10, 0xbb, 0xe3, 0x7e, 0x14, 0x12, 0xdf, 0xb7, 0xee, 0xf6, 0xa1, 0x3d, 0xa1,
	0x9c, 0x85, 0x6a, 0x78, 0x6f, 0x36, 0x9e, 0x9b, 0x63, 0x66, 0xe9, 0x45, 0x34, 0x95, 0x77, 0x97,
	0x9e, 0x42, 0x8b, 0x4b, 0x2f, 0x67, 0x15, 0x97, 0x9e, 0x25, 0xa9, 0xa5, 0xe7, 0x9f, 0x42, 0xbf,
	0xe4, 0xd6, 0x7b, 0x62, 0xdf, 0x87, 0xf6, 0x5b, 0x21, 0x71, 0x3c, 0x4b, 0x28, 0x97, 0x68, 0xfc,
	0x6a, 0x06, 0xae, 0xc2, 0x5e, 0x19, 0xc8, 0xff, 0xb3, 0x02, 0x5b, 0x17, 0x9c, 0xc6, 0xe9, 0x5c,
	0xc8, 0xff, 0xbd, 0xd1, 0x0f, 0xa1, 0xaf, 0xdd, 0x0e, 0xf9, 0x24, 0x5a, 0x32, 0x64, 0xa5, 0x08,
	0xb7, 0x95, 0x68, 0x68, 0x25, 0x26, 0xcc, 0xcf, 0x81, 0x94, 0xf9, 0x85, 0x58, 0x7b, 0x45, 0xba,
	0xde, 0xf2, 0x37, 0x5b, 0xb4, 0x66, 0x26, 0xd6, 0x6e, 0xd1, 0x6c, 0xe3, 0xd6, 0x0b, 0x1b, 0x57,
	0x61, 0x82, 0xa3, 0x5e, 0x91, 0xcd, 0x40, 0x9f, 0xfd, 0x4f, 0xa0, 0x77, 0x13, 0xe1, 0xbf, 0x67,
	0xeb, 0xe8, 0x57, 0x07, 0xdc, 0x80, 0x4e, 0xe5, 0x08, 0xe5, 0xb5, 0x48, 0xae, 0xc8, 0xf7, 0xd0,
	0x29, 0xb5, 0x19, 0xd9, 0x35, 0xbd, 0xb8, 0xee, 0x5f, 0xd0, 0xee, 0xa3, 0xb5, 0x32, 0x63, 0xcd,
	0xdf, 0x20, 0xcf, 0xc1, 0x2d, 0x14, 0x8d, 0x78, 0x86, 0x7d, 0xb7, 0xbd, 0x76, 0x1f, 0xae, 0x91,
	0xe4, 0x5a, 0x8e, 0x61, 0x67, 0x10, 0x85, 0xc8, 0xe5, 0xa5, 0x38, 0xd5, 0xb9, 0xcf, 0x2b, 0x56,
	0x9c, 0x12, 0xab, 0x29, 0xc3, 0x8a, 0x7f, 0x0a, 0x37, 0xc8, 0xb7, 0xb0, 0x35, 0xe4, 0xa9, 0xa4,
	0x51, 0x94, 0xe5, 0x84, 0xd8, 0x27, 0xe1, 0x56, 0x17, 0xec, 0xde, 0xbf, 0x0d, 0x67, 0x6e, 0xbc,
	0xa9, 0xeb, 0xff, 0x9d, 0xcf, 0xfe, 0x09, 0x00, 0x00, 0xff, 0xff, 0x99, 0xb9, 0x1d, 0xe3, 0x8a,
	0x0a, 0x00, 0x00,
}
